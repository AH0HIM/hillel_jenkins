PATH = "/var/lib/jenkins/workspace/HillelTestProject/pipeline_with_parameters"
def importCommon() {common = load "${PATH}/common_functions.groovy"; return common; }


pipeline {
    agent 'any'
    parameters {
        choice(name: "branch", choices: ["main", "develop"], description: "Which branch to use")
        string(name: "url", defaultValue: "http://example.com", description: "Enter URL for testing")
        choice(name: "test", choices:["dir", "file"],  description: "Run tests through: [all, dir, file]")
        choice(name: "test_params", choices:["all", "option_1", "option_2", "option_3"],  description: "Run tests with parameters: [all, option_1, option_2, option_3]")
        booleanParam(name: "save_logs", defaultValue: true, description: "Run to save logs")
        }
    stages {
        stage("Test Repo Setup") {
            steps {
               script {
                    if ("${params.url}" == null) {
                      echo("URL ${params.url} is not exist")
                      } else {
                      echo("URL ${params.url} is exist")
                      }
                    }
                }
            }

        stage('Test Run') {
            steps {
                println("python -m pytest ${test} ${test_params} --url ${url}")
            }
        }

        stages('Parallel Execution') {
            parallel {
                stage('Report') {
                    steps {
                        script {
                            sh("pwd")
                            if (common) {
                                 common.report()
                            }
                        }
                    }
                }
                stage('Log Collection') {
                    steps {
                        script {
                            sh("pwd")
                            if (common) {
                                 common.log_collection()
                            }
                        }
                    }
                }
            }
        }
    }
}